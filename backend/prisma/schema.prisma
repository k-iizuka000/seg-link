// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(uuid())
  stravaId        String      @unique
  name            String
  email           String      @unique
  accessToken     String
  refreshToken    String
  tokenExpiresAt  DateTime
  weight          Float?
  templates       Template[]
  activities      Activity[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Template {
  id        String   @id @default(uuid())
  userId    String
  name      String
  clothing  String
  wheels    String
  wind      String
  weight    Float
  notes     String?
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id                String    @id @default(uuid())
  userId           String
  stravaId         String    @unique
  name             String
  distance         Float
  movingTime       Int
  elapsedTime      Int
  type             String
  startDate        DateTime
  totalElevationGain Float
  averageSpeed     Float?
  maxSpeed         Float?
  averageWatts     Float?
  kilojoules       Float?
  averageHeartrate Float?
  maxHeartrate     Float?
  clothing         String?
  wheels           String?
  wind             String?
  weight           Float?
  user             User      @relation(fields: [userId], references: [id])
  segments         Segment[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Segment {
  id                String     @id @default(uuid())
  stravaId         String     @unique
  name             String
  distance         Float
  averageGrade     Float
  maximumGrade     Float
  elevationHigh    Float
  elevationLow     Float
  elevationDifference Float
  activities       Activity[]
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}
